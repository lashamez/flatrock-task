application:
  cors:
    allowed-origins: '${application.services.user},${application.services.product},${application.services.notification},${application.services.order},${application.services.delivery}'
    allowed-methods: '*'
    allowed-headers: '*'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        base64-secret: ODA3NjgyNDA0ZDNiYTljMGFjYzI0ZTg3YjIyMGIxYzI4ZWQ1NTE1MzQ5NzM4ZmZlNjY0ODM3NjE2MzVhNThkMjVkMzRkYzRkOGEwOGQ5YTA4MjkzZWUxMjc0M2EyYmE3YjFlNDU3Nzk1OTcxODZkMDAyODk3ZmMwYTNkMGIzNzA=
        # 24 hours
        token-validity-in-seconds: 86400
        secret:
  client-app:
    name: FlatRock
  topic:
    order-created: order-created-topic
    customer-notification: customer-notification-topic
    seller-notification: seller-notification-topic
    order-canceled: order-canceled-topic
    order-reversal: order-reversal-topic
  services:
    user: "http://localhost:8090/"
    product: "http://localhost:8081/"
    delivery: "http://localhost:8082/"
    order: "http://localhost:8083/"
    notification: "http://localhost:8085/"

spring:
  application:
    name: flatrock
  cloud:
    stream:
      kafka:
        binder:
          replicationFactor: 1
          auto-create-topics: true
          brokers: localhost:9092

  profiles:
    active: #spring.profiles.active#
    group:
      dev:
        - dev
  task:
    execution:
      thread-name-prefix: flatrock-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: flatrock-scheduling-
      pool:
        size: 2
